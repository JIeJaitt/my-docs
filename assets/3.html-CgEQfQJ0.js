import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as t,e as s}from"./app-CgdPMHM7.js";const e={},o=s(`<p>在Go语言中，func (*Cookie) String 方法用于将http.Cookie类型的对象转换为字符串形式。</p><p>具体来说，它返回一个字符串，该字符串是按照HTTP cookie格式构造的。例如：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
    <span class="token string">&quot;net/http&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cookie <span class="token operator">:=</span> <span class="token operator">&amp;</span>http<span class="token punctuation">.</span>Cookie<span class="token punctuation">{</span>
        Name<span class="token punctuation">:</span>  <span class="token string">&quot;mycookie&quot;</span><span class="token punctuation">,</span>
        Value<span class="token punctuation">:</span> <span class="token string">&quot;12345&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>

    cookieString <span class="token operator">:=</span> cookie<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>cookieString<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果将是：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token assign-left variable">mycookie</span><span class="token operator">=</span><span class="token number">12345</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在这个例子中，我们创建了一个http.Cookie对象并设置了它的Name和Value属性。然后，我们调用String()方法将其转换为字符串形式，并将结果打印到控制台。</p><p>注意，http.Cookie结构体的其他字段（例如Path、Domain和Expires）也会在字符串表示中显示出来，如果它们被设置了值。</p>`,7),p=[o];function i(c,l){return a(),t("div",null,p)}const k=n(e,[["render",i],["__file","3.html.vue"]]),d=JSON.parse('{"path":"/posts/go/3.html","title":"如何使用func (*Cookie) String","lang":"zh-CN","frontmatter":{"title":"如何使用func (*Cookie) String","icon":"edit","date":"2023-06-06T15:21:54.000Z","category":["Go 语言"],"tag":["golang"],"description":"在Go语言中，func (*Cookie) String 方法用于将http.Cookie类型的对象转换为字符串形式。 具体来说，它返回一个字符串，该字符串是按照HTTP cookie格式构造的。例如： 输出结果将是： 在这个例子中，我们创建了一个http.Cookie对象并设置了它的Name和Value属性。然后，我们调用String()方法将其转换...","head":[["meta",{"property":"og:url","content":"https://jiejaitt.tech/posts/go/3.html"}],["meta",{"property":"og:title","content":"如何使用func (*Cookie) String"}],["meta",{"property":"og:description","content":"在Go语言中，func (*Cookie) String 方法用于将http.Cookie类型的对象转换为字符串形式。 具体来说，它返回一个字符串，该字符串是按照HTTP cookie格式构造的。例如： 输出结果将是： 在这个例子中，我们创建了一个http.Cookie对象并设置了它的Name和Value属性。然后，我们调用String()方法将其转换..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-14T02:11:56.000Z"}],["meta",{"property":"article:author","content":"JIeJaitt"}],["meta",{"property":"article:tag","content":"golang"}],["meta",{"property":"article:published_time","content":"2023-06-06T15:21:54.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-14T02:11:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"如何使用func (*Cookie) String\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-06T15:21:54.000Z\\",\\"dateModified\\":\\"2023-06-14T02:11:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"JIeJaitt\\",\\"url\\":\\"https://jiejaitt.tech\\"}]}"]]},"headers":[],"git":{"createdTime":1686064636000,"updatedTime":1686708716000,"contributors":[{"name":"JIeJaitt","email":"498938874@qq.com","commits":2}]},"readingTime":{"minutes":0.67,"words":200},"filePathRelative":"posts/go/3.md","localizedDate":"2023年6月6日","excerpt":"<p>在Go语言中，func (*Cookie) String 方法用于将http.Cookie类型的对象转换为字符串形式。</p>\\n<p>具体来说，它返回一个字符串，该字符串是按照HTTP cookie格式构造的。例如：</p>\\n<div class=\\"language-go\\" data-ext=\\"go\\" data-title=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">package</span> main\\n\\n<span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">(</span>\\n    <span class=\\"token string\\">\\"fmt\\"</span>\\n    <span class=\\"token string\\">\\"net/http\\"</span>\\n<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    cookie <span class=\\"token operator\\">:=</span> <span class=\\"token operator\\">&amp;</span>http<span class=\\"token punctuation\\">.</span>Cookie<span class=\\"token punctuation\\">{</span>\\n        Name<span class=\\"token punctuation\\">:</span>  <span class=\\"token string\\">\\"mycookie\\"</span><span class=\\"token punctuation\\">,</span>\\n        Value<span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">\\"12345\\"</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    cookieString <span class=\\"token operator\\">:=</span> cookie<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">String</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    fmt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Println</span><span class=\\"token punctuation\\">(</span>cookieString<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{k as comp,d as data};
