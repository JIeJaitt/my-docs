const n=JSON.parse('{"key":"v-d110a0ac","path":"/logbook/db__openConn()_.html","title":"为什么每次都需要执行数据库逻辑函数的时候都需要db := openConn()？","lang":"zh-CN","frontmatter":{"title":"为什么每次都需要执行数据库逻辑函数的时候都需要db := openConn()？","icon":"article","date":"2023-05-30T10:53:46.000Z","category":["日志"],"tag":["日志"],"description":"package dbops import ( \\"database/sql\\" _ \\"github.com/go-sql-driver/mysql\\" ) func openConn() *sql.DB { dbConn, err := sql.Open(\\"mysql\\", \\"root:12345678@tcp(localhost:3306)/stmsrv?charset=utf8\\") if err != nil { // 如果数据库都没连接起来, 那么服务端跑起来也没什么意义 // 在项目中, 不要轻易使用 panic // panic 会中断整个项目, 并且抛出这个 panic // 只有在确实无法正常完成业务逻辑的时候, 才使用 panic panic(err.Error()) } return dbConn } func AddUserCredential(loginName string, pwd string) error { // openConn 的时候实际上并不会连接数据库 // 只有在 Prepare 的时候才会真正连接数据库 db := openConn() } func GetUserCredential(loginName string) (string, error) { db := openConn() }","head":[["meta",{"property":"og:url","content":"https://jiejaitt.tech/logbook/db__openConn()_.html"}],["meta",{"property":"og:title","content":"为什么每次都需要执行数据库逻辑函数的时候都需要db := openConn()？"}],["meta",{"property":"og:description","content":"package dbops import ( \\"database/sql\\" _ \\"github.com/go-sql-driver/mysql\\" ) func openConn() *sql.DB { dbConn, err := sql.Open(\\"mysql\\", \\"root:12345678@tcp(localhost:3306)/stmsrv?charset=utf8\\") if err != nil { // 如果数据库都没连接起来, 那么服务端跑起来也没什么意义 // 在项目中, 不要轻易使用 panic // panic 会中断整个项目, 并且抛出这个 panic // 只有在确实无法正常完成业务逻辑的时候, 才使用 panic panic(err.Error()) } return dbConn } func AddUserCredential(loginName string, pwd string) error { // openConn 的时候实际上并不会连接数据库 // 只有在 Prepare 的时候才会真正连接数据库 db := openConn() } func GetUserCredential(loginName string) (string, error) { db := openConn() }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-07T07:01:34.000Z"}],["meta",{"property":"article:author","content":"JIeJaitt"}],["meta",{"property":"article:tag","content":"日志"}],["meta",{"property":"article:published_time","content":"2023-05-30T10:53:46.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-07T07:01:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"为什么每次都需要执行数据库逻辑函数的时候都需要db := openConn()？\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-30T10:53:46.000Z\\",\\"dateModified\\":\\"2023-06-07T07:01:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"JIeJaitt\\",\\"url\\":\\"https://jiejaitt.tech\\"}]}"]]},"headers":[],"git":{"createdTime":1686121294000,"updatedTime":1686121294000,"contributors":[{"name":"JIeJaitt","email":"498938874@qq.com","commits":1}]},"readingTime":{"minutes":2.12,"words":635},"filePathRelative":"logbook/db:=openConn()?.md","localizedDate":"2023年5月30日","excerpt":"<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">package</span> dbops\\n\\n<span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">(</span>\\n    <span class=\\"token string\\">\\"database/sql\\"</span>\\n    <span class=\\"token boolean\\">_</span> <span class=\\"token string\\">\\"github.com/go-sql-driver/mysql\\"</span>\\n<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">openConn</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">*</span>sql<span class=\\"token punctuation\\">.</span>DB <span class=\\"token punctuation\\">{</span>\\n    dbConn<span class=\\"token punctuation\\">,</span> err <span class=\\"token operator\\">:=</span> sql<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Open</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"mysql\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"root:12345678@tcp(localhost:3306)/stmsrv?charset=utf8\\"</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">if</span> err <span class=\\"token operator\\">!=</span> <span class=\\"token boolean\\">nil</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 如果数据库都没连接起来, 那么服务端跑起来也没什么意义</span>\\n    <span class=\\"token comment\\">// 在项目中, 不要轻易使用 panic</span>\\n    <span class=\\"token comment\\">// panic 会中断整个项目, 并且抛出这个 panic</span>\\n    <span class=\\"token comment\\">// 只有在确实无法正常完成业务逻辑的时候, 才使用 panic</span>\\n        <span class=\\"token function\\">panic</span><span class=\\"token punctuation\\">(</span>err<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Error</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">return</span> dbConn\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">AddUserCredential</span><span class=\\"token punctuation\\">(</span>loginName <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">,</span> pwd <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">)</span> <span class=\\"token builtin\\">error</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// openConn 的时候实际上并不会连接数据库</span>\\n    <span class=\\"token comment\\">// 只有在 Prepare 的时候才会真正连接数据库</span>\\n    db <span class=\\"token operator\\">:=</span> <span class=\\"token function\\">openConn</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">GetUserCredential</span><span class=\\"token punctuation\\">(</span>loginName <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">error</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    db <span class=\\"token operator\\">:=</span> <span class=\\"token function\\">openConn</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
