const t=JSON.parse('{"key":"v-5f70a6d2","path":"/posts/go/gojson.html","title":"Go语言我想json文件返序列化到map里","lang":"zh-CN","frontmatter":{"title":"Go语言我想json文件返序列化到map里","icon":"article","date":"2022-06-19T15:16:14.000Z","category":["Go 语言"],"tag":["golang"],"description":"Go语言我想json文件返序列化到map里 如何使用Go语言将json文件反序列化到map里。 首先，你需要导入encoding/json包，这个包提供了json的序列化和反序列化的功能。 然后，你需要定义一个map变量，用来存储反序列化后的数据。map的键类型必须是字符串、整数或者实现了encoding.TextUnmarshaler接口的类型，map的值类型可以是任意类型。 接着，你需要调用json.Unmarshal函数，将json文件的字节切片和map变量的指针作为参数传入。这个函数会解析json文件，并将数据存储到map变量中。 最后，你可以打印或者操作map变量，查看反序列化后的结果。","head":[["meta",{"property":"og:url","content":"https://jiejaitt.tech/posts/go/gojson.html"}],["meta",{"property":"og:title","content":"Go语言我想json文件返序列化到map里"}],["meta",{"property":"og:description","content":"Go语言我想json文件返序列化到map里 如何使用Go语言将json文件反序列化到map里。 首先，你需要导入encoding/json包，这个包提供了json的序列化和反序列化的功能。 然后，你需要定义一个map变量，用来存储反序列化后的数据。map的键类型必须是字符串、整数或者实现了encoding.TextUnmarshaler接口的类型，map的值类型可以是任意类型。 接着，你需要调用json.Unmarshal函数，将json文件的字节切片和map变量的指针作为参数传入。这个函数会解析json文件，并将数据存储到map变量中。 最后，你可以打印或者操作map变量，查看反序列化后的结果。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-14T00:46:49.000Z"}],["meta",{"property":"article:author","content":"JIeJaitt"}],["meta",{"property":"article:tag","content":"golang"}],["meta",{"property":"article:published_time","content":"2022-06-19T15:16:14.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-14T00:46:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Go语言我想json文件返序列化到map里\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-06-19T15:16:14.000Z\\",\\"dateModified\\":\\"2023-06-14T00:46:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"JIeJaitt\\",\\"url\\":\\"https://jiejaitt.tech\\"}]}"]]},"headers":[{"level":2,"title":"Go语言我想json文件返序列化到map里","slug":"go语言我想json文件返序列化到map里","link":"#go语言我想json文件返序列化到map里","children":[]}],"git":{"createdTime":1686703609000,"updatedTime":1686703609000,"contributors":[{"name":"JIeJaitt","email":"498938874@qq.com","commits":1}]},"readingTime":{"minutes":1.58,"words":475},"filePathRelative":"posts/go/gojson.md","localizedDate":"2022年6月19日","excerpt":"<h2> Go语言我想json文件返序列化到map里</h2>\\n<p>如何使用Go语言将json文件反序列化到map里。</p>\\n<ul>\\n<li>首先，你需要导入<code>encoding/json</code>包，这个包提供了json的序列化和反序列化的功能。</li>\\n<li>然后，你需要定义一个map变量，用来存储反序列化后的数据。map的键类型必须是字符串、整数或者实现了<code>encoding.TextUnmarshaler</code>接口的类型，map的值类型可以是任意类型。</li>\\n<li>接着，你需要调用<code>json.Unmarshal</code>函数，将json文件的字节切片和map变量的指针作为参数传入。这个函数会解析json文件，并将数据存储到map变量中。</li>\\n<li>最后，你可以打印或者操作map变量，查看反序列化后的结果。</li>\\n</ul>","autoDesc":true}');export{t as data};
