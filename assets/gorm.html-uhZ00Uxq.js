import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as p,c as o,a as n,b as e,d as c,e as u}from"./app-CgdPMHM7.js";const i={},l=u(`<h1 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h1><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>go get <span class="token parameter variable">-u</span> gorm.io/gorm
go get <span class="token parameter variable">-u</span> gorm.io/driver/sqlite
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="快速入门" tabindex="-1"><a class="header-anchor" href="#快速入门"><span>快速入门</span></a></h1><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
  <span class="token string">&quot;gorm.io/gorm&quot;</span>
  <span class="token string">&quot;gorm.io/driver/sqlite&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> Product <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  gorm<span class="token punctuation">.</span>Model
  Code  <span class="token builtin">string</span>
  Price <span class="token builtin">uint</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  db<span class="token punctuation">,</span> err <span class="token operator">:=</span> gorm<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>sqlite<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">&quot;test.db&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>gorm<span class="token punctuation">.</span>Config<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">&quot;failed to connect database&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 迁移 schema</span>
  db<span class="token punctuation">.</span><span class="token function">AutoMigrate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>Product<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token comment">// Create</span>
  db<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>Product<span class="token punctuation">{</span>Code<span class="token punctuation">:</span> <span class="token string">&quot;D42&quot;</span><span class="token punctuation">,</span> Price<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token comment">// Read</span>
  <span class="token keyword">var</span> product Product
  db<span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>product<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// 根据整型主键查找</span>
  db<span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>product<span class="token punctuation">,</span> <span class="token string">&quot;code = ?&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;D42&quot;</span><span class="token punctuation">)</span> <span class="token comment">// 查找 code 字段值为 D42 的记录</span>

  <span class="token comment">// Update - 将 product 的 price 更新为 200</span>
  db<span class="token punctuation">.</span><span class="token function">Model</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>product<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span><span class="token string">&quot;Price&quot;</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>
  <span class="token comment">// Update - 更新多个字段</span>
  db<span class="token punctuation">.</span><span class="token function">Model</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>product<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Updates</span><span class="token punctuation">(</span>Product<span class="token punctuation">{</span>Price<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span> Code<span class="token punctuation">:</span> <span class="token string">&quot;F42&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 仅更新非零值字段</span>
  db<span class="token punctuation">.</span><span class="token function">Model</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>product<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Updates</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token string">&quot;Price&quot;</span><span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">&quot;Code&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;F42&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token comment">// Delete - 删除 product</span>
  db<span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>product<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>db.AutoMigrate(&amp;Product{})</code>这段代码使用了 GORM 库的 AutoMigrate 方法，作用是将 Go 语言中的 Product 结构体映射到数据库中的表，并自动创建或更新表结构以匹配 Product 结构体的定义。</p><p>具体来说，&amp;Product{} 是一个指向 Product 结构体的指针，传入 AutoMigrate 方法中表示需要将 Product 对象的属性映射到数据库表的字段上。如果数据库中已经存在名为 products 的表，则 AutoMigrate 方法会检查该表的结构是否与 Product 结构体匹配，如果不匹配则会自动更新表结构以适应 Product 的定义。如果数据库中不存在 products 表，则 AutoMigrate 方法会自动创建该表，并根据 Product 结构体的定义创建相应的字段和约束。</p><p>通过这段代码，我们可以方便地将 Go 语言中的结构体类型映射到数据库表，并保持二者的同步。这是一种方便的 ORM（对象关系映射）技术，可以大大简化数据库操作的代码。</p><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2>`,8),r={href:"https://gorm.io/zh_CN/",target:"_blank",rel:"noopener noreferrer"};function k(d,m){const s=t("ExternalLinkIcon");return p(),o("div",null,[l,n("p",null,[n("a",r,[e("GORM文档"),c(s)])])])}const b=a(i,[["render",k],["__file","gorm.html.vue"]]),h=JSON.parse('{"path":"/source/gorm.html","title":"理解 Gorm 使用与源码分析","lang":"zh-CN","frontmatter":{"title":"理解 Gorm 使用与源码分析","icon":"article","date":"2023-06-07T14:26:21.000Z","category":["开源精选"],"tag":["gorm"],"description":"安装 快速入门 db.AutoMigrate(&Product{})这段代码使用了 GORM 库的 AutoMigrate 方法，作用是将 Go 语言中的 Product 结构体映射到数据库中的表，并自动创建或更新表结构以匹配 Product 结构体的定义。 具体来说，&Product{} 是一个指向 Product 结构体的指针，传入 AutoMig...","head":[["meta",{"property":"og:url","content":"https://jiejaitt.tech/source/gorm.html"}],["meta",{"property":"og:title","content":"理解 Gorm 使用与源码分析"}],["meta",{"property":"og:description","content":"安装 快速入门 db.AutoMigrate(&Product{})这段代码使用了 GORM 库的 AutoMigrate 方法，作用是将 Go 语言中的 Product 结构体映射到数据库中的表，并自动创建或更新表结构以匹配 Product 结构体的定义。 具体来说，&Product{} 是一个指向 Product 结构体的指针，传入 AutoMig..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-07T07:18:19.000Z"}],["meta",{"property":"article:author","content":"JIeJaitt"}],["meta",{"property":"article:tag","content":"gorm"}],["meta",{"property":"article:published_time","content":"2023-06-07T14:26:21.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-07T07:18:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"理解 Gorm 使用与源码分析\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-07T14:26:21.000Z\\",\\"dateModified\\":\\"2023-06-07T07:18:19.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"JIeJaitt\\",\\"url\\":\\"https://jiejaitt.tech\\"}]}"]]},"headers":[{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1685459455000,"updatedTime":1686122299000,"contributors":[{"name":"JIeJaitt","email":"498938874@qq.com","commits":1}]},"readingTime":{"minutes":1.52,"words":457},"filePathRelative":"source/gorm.md","localizedDate":"2023年6月7日","excerpt":"\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code>go get <span class=\\"token parameter variable\\">-u</span> gorm.io/gorm\\ngo get <span class=\\"token parameter variable\\">-u</span> gorm.io/driver/sqlite\\n</code></pre></div><h1>快速入门</h1>\\n<div class=\\"language-go\\" data-ext=\\"go\\" data-title=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">package</span> main\\n\\n<span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">(</span>\\n  <span class=\\"token string\\">\\"gorm.io/gorm\\"</span>\\n  <span class=\\"token string\\">\\"gorm.io/driver/sqlite\\"</span>\\n<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">type</span> Product <span class=\\"token keyword\\">struct</span> <span class=\\"token punctuation\\">{</span>\\n  gorm<span class=\\"token punctuation\\">.</span>Model\\n  Code  <span class=\\"token builtin\\">string</span>\\n  Price <span class=\\"token builtin\\">uint</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  db<span class=\\"token punctuation\\">,</span> err <span class=\\"token operator\\">:=</span> gorm<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Open</span><span class=\\"token punctuation\\">(</span>sqlite<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Open</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"test.db\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token operator\\">&amp;</span>gorm<span class=\\"token punctuation\\">.</span>Config<span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token keyword\\">if</span> err <span class=\\"token operator\\">!=</span> <span class=\\"token boolean\\">nil</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">panic</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"failed to connect database\\"</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token comment\\">// 迁移 schema</span>\\n  db<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">AutoMigrate</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">&amp;</span>Product<span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n  <span class=\\"token comment\\">// Create</span>\\n  db<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Create</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">&amp;</span>Product<span class=\\"token punctuation\\">{</span>Code<span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">\\"D42\\"</span><span class=\\"token punctuation\\">,</span> Price<span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">100</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n  <span class=\\"token comment\\">// Read</span>\\n  <span class=\\"token keyword\\">var</span> product Product\\n  db<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">First</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">&amp;</span>product<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// 根据整型主键查找</span>\\n  db<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">First</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">&amp;</span>product<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"code = ?\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"D42\\"</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// 查找 code 字段值为 D42 的记录</span>\\n\\n  <span class=\\"token comment\\">// Update - 将 product 的 price 更新为 200</span>\\n  db<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Model</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">&amp;</span>product<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Update</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Price\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">200</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token comment\\">// Update - 更新多个字段</span>\\n  db<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Model</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">&amp;</span>product<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Updates</span><span class=\\"token punctuation\\">(</span>Product<span class=\\"token punctuation\\">{</span>Price<span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">200</span><span class=\\"token punctuation\\">,</span> Code<span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">\\"F42\\"</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// 仅更新非零值字段</span>\\n  db<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Model</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">&amp;</span>product<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Updates</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">map</span><span class=\\"token punctuation\\">[</span><span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">]</span><span class=\\"token keyword\\">interface</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">{</span><span class=\\"token string\\">\\"Price\\"</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">200</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Code\\"</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">\\"F42\\"</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n  <span class=\\"token comment\\">// Delete - 删除 product</span>\\n  db<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Delete</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">&amp;</span>product<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{b as comp,h as data};
