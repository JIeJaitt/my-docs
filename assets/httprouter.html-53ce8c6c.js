const t=JSON.parse('{"key":"v-75e3262e","path":"/posts/source/httprouter.html","title":"理解 httprouter 使用与源码分析","lang":"zh-CN","frontmatter":{"title":"理解 httprouter 使用与源码分析","icon":"article","date":"2022-01-05T00:00:00.000Z","category":["开源精选"],"tag":["gorm"],"description":"httprouter 是一个快速、灵活的 HTTP 路由器，它使用 Trie 树来实现高效的路由匹配。如果你想深入了解 httprouter 的实现原理，可以阅读其源代码。 在阅读源代码之前，需要先了解 httprouter 中的一些重要概念： Route：表示一个路由规则，包括 HTTP 方法、路径模式和处理器函数。 Node：表示 Trie 树中的一个节点，包括路径片段和路由规则。 Params：表示从 URL 中提取的参数，包括名称和值。 httprouter 的核心在于 Router 类型，它是一个 Trie 树的根节点，包含多个子节点，每个子节点都代表一条路由规则。Router 类型实现了 http.Handler 接口，因此可以将其作为参数传递给 http.ListenAndServe 函数，从而处理传入的 HTTP 请求。","head":[["meta",{"property":"og:url","content":"https://jiejaitt.tech/posts/source/httprouter.html"}],["meta",{"property":"og:title","content":"理解 httprouter 使用与源码分析"}],["meta",{"property":"og:description","content":"httprouter 是一个快速、灵活的 HTTP 路由器，它使用 Trie 树来实现高效的路由匹配。如果你想深入了解 httprouter 的实现原理，可以阅读其源代码。 在阅读源代码之前，需要先了解 httprouter 中的一些重要概念： Route：表示一个路由规则，包括 HTTP 方法、路径模式和处理器函数。 Node：表示 Trie 树中的一个节点，包括路径片段和路由规则。 Params：表示从 URL 中提取的参数，包括名称和值。 httprouter 的核心在于 Router 类型，它是一个 Trie 树的根节点，包含多个子节点，每个子节点都代表一条路由规则。Router 类型实现了 http.Handler 接口，因此可以将其作为参数传递给 http.ListenAndServe 函数，从而处理传入的 HTTP 请求。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-06T15:17:16.000Z"}],["meta",{"property":"article:author","content":"JIeJaitt"}],["meta",{"property":"article:tag","content":"gorm"}],["meta",{"property":"article:published_time","content":"2022-01-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-06T15:17:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"理解 httprouter 使用与源码分析\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-01-05T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-06T15:17:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"JIeJaitt\\",\\"url\\":\\"https://jiejaitt.tech\\"}]}"]]},"headers":[],"git":{"createdTime":1686064636000,"updatedTime":1686064636000,"contributors":[{"name":"JIeJaitt","email":"498938874@qq.com","commits":1}]},"readingTime":{"minutes":4.59,"words":1378},"filePathRelative":"posts/source/httprouter.md","localizedDate":"2022年1月5日","excerpt":"<p>httprouter 是一个快速、灵活的 HTTP 路由器，它使用 Trie 树来实现高效的路由匹配。如果你想深入了解 httprouter 的实现原理，可以阅读其源代码。</p>\\n<p>在阅读源代码之前，需要先了解 httprouter 中的一些重要概念：</p>\\n<ul>\\n<li>Route：表示一个路由规则，包括 HTTP 方法、路径模式和处理器函数。</li>\\n<li>Node：表示 Trie 树中的一个节点，包括路径片段和路由规则。</li>\\n<li>Params：表示从 URL 中提取的参数，包括名称和值。</li>\\n</ul>\\n<p>httprouter 的核心在于 Router 类型，它是一个 Trie 树的根节点，包含多个子节点，每个子节点都代表一条路由规则。Router 类型实现了 http.Handler 接口，因此可以将其作为参数传递给 http.ListenAndServe 函数，从而处理传入的 HTTP 请求。</p>","autoDesc":true}');export{t as data};
